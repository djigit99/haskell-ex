Configuring binary-strict-0.4.8.5...
Preprocessing library for binary-strict-0.4.8.5..
Building library for binary-strict-0.4.8.5..

[;1msrc\Data\Binary\Strict\BitGet.hs:2:16: [;1m[35mwarning:[0m[0m[;1m[0m[0m[;1m
    -fglasgow-exts is deprecated: Use individual extensions instead[0m[0m
[;1m[34m  |[0m[0m
[;1m[34m2 |[0m[0m {-# OPTIONS_GHC[;1m[35m -fglasgow-exts [0m[0m#-}
[;1m[34m  |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Binary\Strict\IncrementalGet.hs:2:16: [;1m[35mwarning:[0m[0m[;1m[0m[0m[;1m
    -fglasgow-exts is deprecated: Use individual extensions instead[0m[0m
[;1m[34m  |[0m[0m
[;1m[34m2 |[0m[0m {-# OPTIONS_GHC[;1m[35m -fglasgow-exts [0m[0m#-}
[;1m[34m  |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Binary\Strict\Get.hs:2:16: [;1m[35mwarning:[0m[0m[;1m[0m[0m[;1m
    -fglasgow-exts is deprecated: Use individual extensions instead[0m[0m
[;1m[34m  |[0m[0m
[;1m[34m2 |[0m[0m {-# OPTIONS_GHC[;1m[35m -fglasgow-exts [0m[0m#-}
[;1m[34m  |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[1 of 9] Compiling Data.Binary.Strict.BitUtil
[2 of 9] Compiling Data.Binary.Strict.BitGet

[;1msrc\Data\Binary\Strict\BitGet.hs:171:14: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of `inlinePerformIO'
    (imported from Data.ByteString.Internal):
    Deprecated: "If you think you know what you are doing, use 'unsafePerformIO'. If you are sure you know what you are doing, use 'unsafeDupablePerformIO'. If you enjoy sharing an address space with a malevolent agent of chaos, try 'accursedUnutterablePerformIO'."[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m171 |[0m[0m     return . [;1m[35mBI.inlinePerformIO[0m[0m $ withForeignPtr fp $ \p -> peek (castPtr $ p `plusPtr` o)
[;1m[34m    |[0m[0m[;1m[35m              ^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[3 of 9] Compiling Data.Binary.BitBuilder
[4 of 9] Compiling Data.Binary.BitPut

[;1msrc\Data\Binary\BitPut.hs:40:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    Module `Control.Monad.Error' is deprecated:
      Use "Control.Monad.Except" instead[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m40 |[0m[0m [;1m[35mimport Control.Monad.Error[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Binary\BitPut.hs:82:23: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of `bitSize' (imported from Data.Bits):
    Deprecated: "Use 'bitSizeMaybe' or 'finiteBitSize' instead"[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m82 |[0m[0m putBits v = putNBits ([;1m[35mbitSize[0m[0m v) v
[;1m[34m   |[0m[0m[;1m[35m                       ^^^^^^^[0m[0m
[0m[0m[0m[5 of 9] Compiling Data.Binary.Strict.ByteSet
[6 of 9] Compiling Data.Binary.Strict.Class
[7 of 9] Compiling Data.Binary.Strict.Get

[;1msrc\Data\Binary\Strict\Get.hs:275:14: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of `inlinePerformIO'
    (imported from Data.ByteString.Internal):
    Deprecated: "If you think you know what you are doing, use 'unsafePerformIO'. If you are sure you know what you are doing, use 'unsafeDupablePerformIO'. If you enjoy sharing an address space with a malevolent agent of chaos, try 'accursedUnutterablePerformIO'."[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m275 |[0m[0m     return . [;1m[35mB.inlinePerformIO[0m[0m $ withForeignPtr fp $ \p -> peek (castPtr $ p `plusPtr` o)
[;1m[34m    |[0m[0m[;1m[35m              ^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[8 of 9] Compiling Data.Binary.Strict.IncrementalGet

[;1msrc\Data\Binary\Strict\IncrementalGet.hs:104:10: [;1m[35mwarning:[0m[0m[;1m[0m[0m[;1m
    * Ignoring unusable UNPACK pragma on the first argument of `S'
    * In the definition of data constructor `S'
      In the data type declaration for `S'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m104 |[0m[0m data S = [;1m[35mS {-# UNPACK #-} !BL.ByteString  -- input[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc\Data\Binary\Strict\IncrementalGet.hs:104:10: [;1m[35mwarning:[0m[0m[;1m[0m[0m[;1m
    * Ignoring unusable UNPACK pragma on the third argument of `S'
    * In the definition of data constructor `S'
      In the data type declaration for `S'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m104 |[0m[0m data S = [;1m[35mS {-# UNPACK #-} !BL.ByteString  -- input[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc\Data\Binary\Strict\IncrementalGet.hs:302:14: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of `inlinePerformIO'
    (imported from Data.ByteString.Internal):
    Deprecated: "If you think you know what you are doing, use 'unsafePerformIO'. If you are sure you know what you are doing, use 'unsafeDupablePerformIO'. If you enjoy sharing an address space with a malevolent agent of chaos, try 'accursedUnutterablePerformIO'."[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m302 |[0m[0m     return . [;1m[35mB.inlinePerformIO[0m[0m $ withForeignPtr fp $ \p -> peek (castPtr $ p `plusPtr` o)
[;1m[34m    |[0m[0m[;1m[35m              ^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[9 of 9] Compiling Data.Binary.Strict.Util
Installing library in C:\sr\snapshots\cabf7dcf\lib\x86_64-windows-ghc-8.6.5\binary-strict-0.4.8.5-Dz3lBmF9MejIRyVi0FW2NO
Registering library for binary-strict-0.4.8.5..
